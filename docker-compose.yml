#version: "3.8"

services:
  naming-server:
    image: naming-server
    build:
      context: ./NamingServer/
    ports:
      - "8761:8761"
    environment:
      - EUREKA_SERVER_PORT=8761
    networks:
      - backend-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  api-gateway:
    image: api-gateway
    build:
      context: ./APIGateway/
    ports:
      - "8080:8080"
    networks:
      - backend-network
    depends_on:
      naming-server:
        condition: service_healthy
    environment:
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://naming-server:8761/eureka/

  soundarchivedb:
    container_name: soundarchivedb
    image: postgres:latest
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=SoundArchiveDB
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - backend-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  mongodb:
    image: mongo
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"
    networks:
      - backend-network
    volumes:
      - mongo_data:/data/db

  users-service:
    image: users-service
    build:
      context: ./UsersService/
    ports:
      - "8081:8081"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://soundarchivedb:5432/SoundArchiveDB
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://naming-server:8761/eureka/
    depends_on:
      soundarchivedb:
        condition: service_healthy
      naming-server:
        condition: service_healthy
    networks:
      - backend-network

  track-service:
    image: track-service
    build:
      context: ./TrackService/
    volumes:
      - ./TrackService/uploads:/app/uploads
    ports:
      - "8082:8082"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://soundarchivedb:5432/SoundArchiveDB
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://naming-server:8761/eureka/
    depends_on:
      soundarchivedb:
        condition: service_healthy
      naming-server:
        condition: service_healthy
    networks:
      - backend-network

  order-service:
    image: order-service
    build:
      context: ./OrderService/
    ports:
      - "8083:8083"
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://mongodb:27017/soundArchive
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://naming-server:8761/eureka/
    depends_on:
      mongodb:
        condition: service_started
      naming-server:
        condition: service_healthy
    networks:
      - backend-network

volumes:
  postgres_data:
  mongo_data:
  #kafka_data:

networks:
  backend-network:
    driver: bridge




#  kafka-1:
#    image: bitnami/kafka:latest
#    ports:
#      - "9092:9092"
#    environment:
#      - KAFKA_CFG_NODE_ID=1
#      - KAFKA_ENABLE_KRAFT=yes
#      - KAFKA_CFG_PROCESS_ROLES=broker,controller
#      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
#      - KAFKA_CFG_LISTENERS=PLAINTEXT://kafka-1:9092,CONTROLLER://kafka-1:9094
#      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
#      - KAFKA_CFG_BROKER_ID=1
#      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka-1:9094
#      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-1:9092 #kafka-1 za docker
#      - ALLOW_PLAINTEXT_LISTENER=yes
#      - KAFKA_KRAFT_CLUSTER_ID=r4zt_wrqTRuT7W2NJsB_GA
#      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka-1:9092
#    volumes:
#      - kafka_data:/bitnami/kafka
#    networks:
#      - backend-network
#    healthcheck:
#      test: [ "CMD", "/opt/bitnami/kafka/bin/kafka-broker-api-versions.sh", "--bootstrap-server", "localhost:9092" ]
#      interval: 10s
#      timeout: 5s
#      retries: 5
#      start_period: 60s  # Allow more time for Kafka startup